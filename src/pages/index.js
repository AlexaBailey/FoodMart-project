import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import Navbar from './components/Navbar'
import setToken from './utilities/setToken'
import Infonav from './components/Infonav'
import jwtDecode from 'jwt-decode'
import { useState,useEffect } from 'react'
import ProductItem from './components/ProductItem'
import axios from 'axios'
import Category from './components/Category'
import { parseArgs } from 'util'
import Footer from './components/Footer'
import Link from 'next/link'
import Pluses from './components/Pluses'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
      
const [products, setAllProducts] = useState([]);  
const [favourite,setFavourite]=useState('')
const [hasLoaded, setLoaded] = useState(false);
let jwtUser;

useEffect((jwtUser) => {
    setLoaded(true)
    if (localStorage.token) {
      const jwt = localStorage.getItem("token");
      setToken(jwt);
      jwtUser = jwtDecode(jwt);
      console.log(jwtUser)
  }
 if (jwtUser){

  const receiveInfo = async () => {
    
   

    try {
     
      
      const res = await axios.get(`https://foodmart-api-production.up.railway.app/main/${jwtUser.id}`,{params:{id:jwtUser.id}});
      setAllProducts(res.data[0]);
      setFavourite(res.data[1])
      

       console.log("Data",res.data)
    } catch (err) {
      console.log(err);
    }
  };
  receiveInfo();
 }
}, []);
const [search,setSearch]=useState('')

const handleSubmit= async (e) => {
  
  try {
    e.preventDefault()
    const res = await axios.post(`https://foodmart-api-production.up.railway.app/main/${jwtUser.id}`,{params:{id:jwtUser.id},search:search});
    setAllProducts(res.data[0]);
    setFavourite(res.data[1])
        console.log(products)
 
     console.log("Data",res.data)
  } catch (err) {
    console.log(err);
  }
};

const sortByPriceAsc = () => {
	const fProducts = [];
  for (const product of products){
   
    fProducts.push(product)
  }
     fProducts.sort((a,b)=>a.price-b.price)
     console.log(fProducts)
   
    
  
  setAllProducts(fProducts)



	};

  			
			
const sortByPriceDesc = () => {
	const fProducts = [];
  for (const product of products){
   
    fProducts.push(product)
  }
     fProducts.sort((a,b)=>b.price-a.price)
     console.log(fProducts)
   
    
  
  setAllProducts(fProducts)



	};


if (hasLoaded){
  if (localStorage.token) {
    const jwt = localStorage.getItem("token");
    setToken(jwt);
    jwtUser = jwtDecode(jwt);
}
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
<link rel="preconnect" href="https://fonts.gstatic.com"/>
<link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600&display=swap" rel="stylesheet"/>
      </Head>
   
      <Navbar products={products} setAllProducts={setAllProducts}/>
        <Infonav/>
        <main className='all'>
      
      <div className='hero'>
        <div className='hero-image'>
          <div className='text-part'>
          <span style={{color:'orange'}}>100% natural</span>
          <h2>Fresh Smoothie &
Summer Juice</h2>
          <span className='grey'>Best selling summer juice with natural extracts.</span>
          <Link className='shop' href={{
      pathname: "/[department]",
      query: {department:"Alcohol&Soft Drinks"}
    }} as={"/Alcohol&Soft Drinks"} 
  >
       
            <span>SHOP NOW</span>
        </Link>
          </div>
          <img src='../smoothie.png'/>
         
        
        </div>
        <div className='two-images'>
          <div className='small-hero-image first'>
          <div className='text-part'>
          <span>20% off</span>
          <h2>Fruits & Vegetables</h2>
          <Link className='custom-link' href={{
      pathname: "/[department]",
      query: {department:"Fruits&Vegges"}
    }} as={"/Fruits&Vegges"} 
  >
       
            <span>Shop The Category ➜</span>
        </Link>
          </div>
          <img src='../fruit.png'/>

          </div>
          <div className='small-hero-image second'>
          <div className='text-part'>
          <span>15% off</span>
          <h2>Baked Products</h2>
          <Link className='custom-link' href={{
      pathname: "/[department]",
      query: {department:"Breads&Sweets"}
    }} as={"/Breads&Sweets"} 
  >
       
            <span>Shop The Category ➜</span>
        </Link>

          </div>
          <img src='../bakery.png'/>

          </div>
          

        </div>
        </div>
        <h2 style={{paddingTop:40}}>Category</h2>
    <Category/>
    <h2>Top Products</h2>
    {
  jwtUser?<>
    <div style={{display:'flex',gap:3}}>
    <form className='searchform' onSubmit={handleSubmit}>
           
           <input name='search' placeholder='Search products' onChange={e=>setSearch(e.target.value)} />
           <img  src='../../search.png'/>
       </form>

    <button className='price-button' onClick={sortByPriceDesc}>$$$-$</button>
    <button className='price-button'  onClick={sortByPriceAsc}>$-$$$</button>
    </div>

 
 { products && products!=''? 
  <div class="product-container">
  <div class="product-box">
    {
products.map((product)=>{
var favouriteitem=favourite.filter(i=> i.prodid==product.pid)

return(
         <ProductItem
         key={product.pid}
         product={product}
        jwtUser={jwtUser}
         favourite={favouriteitem}
         setFavourite={setFavourite}
          setAllProducts={setAllProducts}
          products={products}
       />
     )})}</div></div>:<div style={{display:'flex',flexDirection:'column', alignItems:'center',gap:8}}><span>No products delivered to shop yet!</span><img style={{height:80}} src='./basket.png'/></div>}

</>:<>
  <div className='blurred'>
    <h1>Log in to see the products!</h1>
    
    </div></>
}
   
   

<Pluses/>

    </main>
    <Footer/>

      
    
    </>
  )
}
else{
  return null
}
}
